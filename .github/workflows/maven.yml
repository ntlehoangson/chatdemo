# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
             ref: main
      - name: Set up JDK
        uses: actions/setup-java@v3 
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Build and package
        run: mvn clean install

      # - name: Deploy to VPS
      #   uses: appleboy/scp-action@v0.1.7
      #   with:
      #     host: ${{ secrets.VPS_HOST }}
      #     username: ${{ secrets.VPS_NAME }}
      #     key: ${{ secrets.VPS_PRIVATE_KEY }}
      #     source: target/websocket-demo-0.0.1-SNAPSHOT.jar
      #     target: /project/websocket-demo-0.0.1-SNAPSHOT.jar
    
      # - name: Checkout code 
      #  run: git checkout dev

      # - name: Build and package
      #   run: ./mvnw clean package -DskipTests

      # - name: Copy JAR to VPS
      #  uses: appleboy/scp-action@v1
      #   with:
      #     host: ${{ secrets.VPS_SHOST }}
      #     username: ${{ secrets.VPS_NAME }}
      #     key: ${{ secrets.VPS_PRIVATE_KEY }}
      #     source: target/websocket-demo-0.0.1-SNAPSHOT.jar
      #     target: /project/websocket-demo-0.0.1-SNAPSHOT.jar 

      - name: SSH into VPS and start app
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_NAME }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          script: 
            scp target//websocket-demo-0.0.1-SNAPSHOT.jar  ${{ secrets.VPS_NAME }}@${{ secrets.VPS_SHOST }}:/project/websocket-demo-0.0.1-SNAPSHOT.jar 
            cd /project
            java -jar websocket-demo-0.0.1-SNAPSHOT.jar
